import { test, chromium, expect } from '@playwright/test';
//import { exec } from 'child_process';

test('Read Credit Card', async ({ }) => {
  let browser = await chromium.launch({headless: false});
  const context = await browser.newContext();
  const page = await context.newPage();
  await page.goto('https://demo.guru99.com/payment-gateway/index.php');
  await page.waitForTimeout(2000);
  const cardLink = await page.locator("//nav/a[text()='Generate Card Number']");
  expect(cardLink).toBeVisible();
  await cardLink.click();
  const launchedPage = await context.waitForEvent('page');
  const cardNumber = await launchedPage.locator("//h4[contains(text(),'Card')]");
  await launchedPage.waitForTimeout(2000);
  expect(cardNumber).toBeVisible();  
  const cardNumberRaw = await cardNumber.textContent();  
  const cardNumberValue = cardNumberRaw.split(':-')[1].trim();
  console.log(cardNumberValue);
  const cvvField = launchedPage.locator("//h4[contains(text(),'CVV')]");
  const cvvRaw = await cvvField.textContent();
  const cvvValue = cvvRaw.split(':-')[1].trim();   
  console.log(cvvValue);
  const expiryField = launchedPage.locator("//h4[contains(text(),'Exp')]");
  const expiryRaw = await expiryField.textContent();
  const expiryValue = expiryRaw.split(':-')[1].trim();
  console.log(expiryValue);
  const expiryDate = expiryValue.split('/');
  const month = expiryDate[0].trim();
  const year = expiryDate[1].trim();
  launchedPage.close();
  
  await page.waitForTimeout(2000);  
  const cartLink = page.locator("//nav/a[text()='Cart']");
  expect(cartLink).toBeVisible();
  await cartLink.click();
  await page.waitForTimeout(2000);
  const quantityField = page.locator("//div/select[@name='quantity']");
  await quantityField.selectOption('2');
  const buyNOwButton = page.locator("//input[@type='submit']");
  expect(buyNOwButton).toBeVisible();
  await buyNOwButton.click();
  await page.waitForTimeout(2000);
  const headerField = page.locator("//h2[text()='Payment Process']");
  expect(headerField).toBeVisible();
  const cardNumberInput = page.locator("//input[@name='card_nmuber']");
  await cardNumberInput.fill(cardNumberValue);
  const cvvInput = page.locator("//input[@name='cvv_code']");
  await cvvInput.fill(cvvValue);
  const monthInput = page.locator("//select[@name='month']");
  await monthInput.selectOption(month);
  const yearInput = page.locator("//select[@name='year']");
  await yearInput.selectOption(year);
  const payButton = page.locator("//input[@type='submit']");
  expect(payButton).toBeVisible();
  await payButton.click();
  await page.waitForTimeout(2000);
  const confirmationHeader = page.locator("//div/h2");
  expect(confirmationHeader).toBeVisible();
  const confirmationText = await confirmationHeader.textContent();
  expect(confirmationText).toContain('Payment successfull!'); 
  const orderIdField = page.locator("//table/tbody/tr/td/h3[strong='Order ID']");
  expect(orderIdField).toBeVisible();
  const orderIdElement = page.locator("//table/tbody/tr/td/h3[strong='Order ID']/../following-sibling::*");
  const orderIdValue = await orderIdElement.textContent();
  const ccLimitLink = page.locator("//nav/a[text()='Check Credit Card Limit']")
  ccLimitLink.click();
  await page.waitForTimeout(2000);
  const headerField1=page.locator("//h2");
  expect(headerField1).toBeVisible();
  const headerText = await headerField1.textContent();
  expect(headerText).toContain('Check Credit Balance');
  const cardInput = page.locator("//input[@name='card_nmuber']");
  await cardInput.fill(cardNumberValue);
  const submitButton = page.locator("//input[@type='submit']");
  expect(submitButton).toBeVisible();
  await submitButton.click();
  await page.waitForTimeout(2000);
  const tableRow = await page.$$("//table/tbody/tr/td");
  const tableHeader = await page.$$("//table/thead/tr/th");  
  const headerList=[];
  for(const headerElement of tableHeader){
    
    const thText = await headerElement.textContent();
    console.log(thText);
    headerList.push(thText);    
  }
  let cardNumberIndex = headerList.indexOf('Card Number');
  console.log(cardNumberIndex);
  const cardNumberRetrieved = await tableRow[cardNumberIndex].textContent();
  console.log(cardNumberRetrieved);
  expect(cardNumberRetrieved).toEqual(cardNumberValue);
  const monthRetrieved = await tableRow[headerList.indexOf('Month')].textContent();
  console.log(monthRetrieved);
  expect(parseInt(monthRetrieved)).toEqual(parseInt(month,10));
  const yearRetrieved = await tableRow[headerList.indexOf('Year')].textContent();
  console.log(yearRetrieved);
  expect(yearRetrieved).toEqual(year);
  const cvvRetrieved = await tableRow[headerList.indexOf('CVV')].textContent();
  console.log(cvvRetrieved);
  expect(cvvRetrieved).toEqual(cvvValue);
  const orderIdRetrieved = await tableRow[headerList.indexOf('Order Id')].textContent();
  console.log(orderIdRetrieved);
  expect(orderIdRetrieved).toEqual(orderIdValue);
  
});